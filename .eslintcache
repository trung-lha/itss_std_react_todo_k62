[{"E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\index.js":"1","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\reportWebVitals.js":"2","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\App.js":"3","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\Todo.js":"4","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\Input.js":"5","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\Filter.js":"6","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\TodoItem.js":"7","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\hooks\\firebasestorage.js":"8","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\lib\\util.js":"9","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\lib\\firebase.js":"10","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\Login.js":"11","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\UploadAvatar.js":"12"},{"size":517,"mtime":1618193150448,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1618193150448,"results":"15","hashOfConfig":"14"},{"size":1697,"mtime":1621623077970,"results":"16","hashOfConfig":"14"},{"size":2178,"mtime":1621611419360,"results":"17","hashOfConfig":"14"},{"size":780,"mtime":1618195575287,"results":"18","hashOfConfig":"14"},{"size":941,"mtime":1618879880655,"results":"19","hashOfConfig":"14"},{"size":657,"mtime":1618195264827,"results":"20","hashOfConfig":"14"},{"size":1117,"mtime":1621611045002,"results":"21","hashOfConfig":"14"},{"size":68,"mtime":1618193150448,"results":"22","hashOfConfig":"14"},{"size":2701,"mtime":1621622857373,"results":"23","hashOfConfig":"14"},{"size":376,"mtime":1621621899930,"results":"24","hashOfConfig":"14"},{"size":1767,"mtime":1621622919488,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10upzvq",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\index.js",[],"E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\reportWebVitals.js",[],"E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\App.js",[],"E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\Todo.js",["56","57","58"],"import React, { useState } from 'react';\r\n\r\n/* \r\n  【Todoのデータ構成】\r\n　・key：Todoを特定するID（String）\r\n　・text：Todoの内容（String）\r\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\n// import useStorage from '../hooks/storage';\r\nimport useFirebaseStorage from '../hooks/firebasestorage';\r\n\r\n/* ライブラリ */\r\nimport {getKey} from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  // const [items, putItems, clearItems] = useStorage();\r\n  const [items, addItem, updateItem, clearItems] = useFirebaseStorage();\r\n  const [filter, setFilter] = React.useState('ALL');\r\n\r\n  const displayItems = items.filter(item => {\r\n    if (filter === 'ALL') return true;\r\n    if (filter === 'TODO') return !item.done;\r\n    if (filter === 'DONE') return item.done;\r\n  });\r\n  const handleCheck = checked => {\r\n    // const newItems = items.map(item => {\r\n    //   if (item.key === checked.key) {\r\n    //     item.done = !item.done;\r\n    //   }\r\n    //   return item;\r\n    // });\r\n    // putItems(newItems);\r\n    updateItem(checked);\r\n  };\r\n\r\n  const handleAdd = text => {\r\n    // putItems([...items, { key: getKey(), text, done: false }]);\r\n    addItem({ text, done: false });\r\n  };\r\n\r\n  const handleFilterChange = value => setFilter(value);\r\n  return (\r\n    <article className=\"panel is-primary\">\r\n      <div className=\"panel-heading\">\r\n        ITSS ToDoアプリ\r\n      </div>\r\n      <Input onAdd={handleAdd}></Input>\r\n      \r\n      <Filter\r\n        onChange={handleFilterChange}\r\n        value={filter}\r\n      />\r\n      {displayItems.map(item => (\r\n        <TodoItem\r\n          key={item.key}\r\n          item={item}\r\n          onCheck={handleCheck} />\r\n      ))}\r\n      <div className=\"panel-block\">\r\n       {displayItems.length} items\r\n      </div>\r\n      <div className=\"panel-block\">\r\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\r\n          Delete all tasks\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Todo;","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\Input.js",["59"],"import React, { useState } from 'react';\r\n/* \r\n  【inputコンポーネント】\r\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\r\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\r\n*/\r\nfunction Input({ onAdd }) {\r\n  const [text, setText] = React.useState('');\r\n\r\n  const handleChange = e => setText(e.target.value);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      onAdd(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n        class=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"入力してください\"\r\n        value={text}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\Filter.js",["60","61","62"],"/* \r\n  【Filterコンポーネント】\r\n　・該当するTodoをステータス毎にで分けてリスト表示する\r\n　・タブで表示する\r\n　・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nfunction Filter({ value, onChange }) {\r\n\r\n  const handleClick = (key, e) => {\r\n    e.preventDefault();\r\n    onChange(key);\r\n  };\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'ALL')}\r\n        className={value === 'ALL' ?  'is-active' : ''}\r\n      > All </a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'TODO')}\r\n        className={value === 'TODO' ?  'is-active' : ''}\r\n      > Unfinished </a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'DONE')}\r\n        className={value === 'DONE' ?  'is-active' : ''}\r\n      > Completed </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\TodoItem.js",[],"E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\hooks\\firebasestorage.js",["63"],"import { useState, useEffect } from 'react';\r\n\r\nimport { addFirebaseItem, updateFirebaseItem, getFirebaseItems, clearFirebaseItem } from \"../lib/firebase\";\r\n\r\nfunction useFirebaseStorage() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [items]);\r\n\r\n  const getItems = async () => {\r\n    const _items = await getFirebaseItems();\r\n    setItems(_items);\r\n  };\r\n\r\n  const addItem = async item => {\r\n    const newItem = { text: item.text, done: item.done };\r\n    await addFirebaseItem(newItem);\r\n    setItems([...items, newItem]);\r\n  };\r\n\r\n  const updateItem = async checked => {\r\n    const changes = { done: !checked.done };\r\n    await updateFirebaseItem(changes, checked.id);\r\n    const newItems = items.map((item) => {\r\n      if (item.id === checked.id) {\r\n        item = { ...item, changes}\r\n      }\r\n      return item;\r\n    })\r\n    setItems(newItems);\r\n  }\r\n\r\n  const clearItems = () => {\r\n    items.map(item => {\r\n      clearFirebaseItem(item);\r\n    })\r\n    setItems([]);\r\n  };\r\n\r\n  return [items, addItem, updateItem, clearItems];\r\n}\r\n\r\nexport default useFirebaseStorage;","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\lib\\util.js",[],"E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\lib\\firebase.js",[],"E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\Login.js",["64"],"import React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n\r\n/* ライブラリ */\r\nimport { firebase, auth, uiConfig } from \"../lib/firebase\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"column panel-block\">\r\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","E:\\Tài liệu\\BK\\Năm 4\\2020_2\\Nhật ngành\\itss_std_react_todo_k62\\src\\components\\UploadAvatar.js",["65"],"import React, { useState } from 'react'\r\n\r\nimport { uploadImage } from \"../lib/firebase\";\r\n\r\nfunction UploadAvatar({ userImage, onSletctedImage }) {\r\n  const [isModal, setIsModal] = useState(false);\r\n  const active = isModal ? \"is-active\" : \"\";\r\n  const [imageUrl, setImageUrl] = useState(userImage);\r\n\r\n  const handleImage = async event => {\r\n    const image = event.target.files[0];\r\n    const imageUrl = await uploadImage(image);\r\n    onSletctedImage(imageUrl);\r\n    setImageUrl(imageUrl);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setIsModal(!isModal);\r\n  };\r\n\r\n  const ImageViewer = () => {\r\n    if (!imageUrl) {\r\n      return <i class=\"fas fa-user\"></i>\r\n    } else {\r\n      return (\r\n        <div>\r\n          <img src={imageUrl} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={`modal ${active}`}>\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content\">\r\n          <div class=\"file is-boxed\" >\r\n            <label class=\"file-label\">\r\n              <input class=\"file-input\" type=\"file\" name=\"resume\" onChange={handleImage} />\r\n              <span class=\"file-cta\">\r\n                <span class=\"file-icon\">\r\n                  <i class=\"fas fa-upload\"></i>\r\n                </span>\r\n                <span class=\"file-label\">画像を選択してください</span>\r\n              </span>\r\n            </label>\r\n          </div>\r\n          <button class=\"modal-close is-large\" aria-label=\"close\" onClick={handleClick}></button>\r\n        </div>\r\n      </div>\r\n      <button onClick={handleClick} class=\"button is-primary is-inverted\">\r\n        <span class=\"icon\">\r\n          <ImageViewer />\r\n        </span>\r\n      </button>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default UploadAvatar;",{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":20,"column":9,"nodeType":"68","messageId":"69","endLine":20,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":27,"column":42,"nodeType":"73","messageId":"74","endLine":27,"endColumn":44},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":15,"column":7,"nodeType":"77","endLine":19,"endColumn":8},{"ruleId":"75","severity":1,"message":"76","line":20,"column":7,"nodeType":"77","endLine":24,"endColumn":8},{"ruleId":"75","severity":1,"message":"76","line":25,"column":7,"nodeType":"77","endLine":29,"endColumn":8},{"ruleId":"71","severity":1,"message":"78","line":36,"column":20,"nodeType":"73","messageId":"79","endLine":36,"endColumn":22},{"ruleId":"66","severity":1,"message":"80","line":5,"column":10,"nodeType":"68","messageId":"69","endLine":5,"endColumn":18},{"ruleId":"81","severity":1,"message":"82","line":27,"column":11,"nodeType":"77","endLine":27,"endColumn":33},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","'firebase' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]